name: Cache Rust dependencies

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    # selecting a toolchain either by action or manual `rustup` calls should happen
    # before the plugin, as the cache uses the current rustc version as its cache key
    - run: rustup toolchain install stable --profile minimal
    
    - uses: Swatinem/rust-cache@v2
      with:

        # A whitespace separated list of env-var *prefixes* who's value contributes
        # to the environment cache key.
        # The env-vars are matched by *prefix*, so the default `RUST` var will
        # match all of `RUSTC`, `RUSTUP_*`, `RUSTFLAGS`, `RUSTDOC_*`, etc.
        # default: "CARGO CC CFLAGS CXX CMAKE RUST"
        env-vars: "RUSTFLAGS=-Dwarnings"
    
        # The cargo workspaces and target directory configuration.
        # These entries are separated by newlines and have the form
        # `$workspace -> $target`. The `$target` part is treated as a directory
        # relative to the `$workspace` and defaults to "target" if not explicitly given.
        # default: ". -> target"
        workspaces: "examples"
    
        # Additional non workspace directories to be cached, separated by newlines.
        cache-directories: ""
    
        # Determines whether workspace `target` directories are cached.
        # If `false`, only the cargo registry will be cached.
        # default: "true"
        cache-targets: "true"
    
        # Determines if the cache should be saved even when the workflow has failed.
        # default: "false"
        cache-on-failure: "false"
    
        # Determines which crates are cached.
        # If `true` all crates will be cached, otherwise only dependent crates will be cached.
        # Useful if additional crates are used for CI tooling.
        # default: "false"
        cache-all-crates: "false"
    
        # Determines whether the cache should be saved.
        # If `false`, the cache is only restored.
        # Useful for jobs where the matrix is additive e.g. additional Cargo features,
        # or when only runs from `master` should be saved to the cache.
        # default: "true"
        save-if: "true"
    
        # Determines whether the cache should be restored.
        # If `true` the cache key will be checked and the `cache-hit` output will be set
        # but the cache itself won't be restored
        # default: "false"
        lookup-only: "false"
    
        # Specifies what to use as the backend providing cache
        # Can be set to either "github" or "buildjet"
        # default: "github"
        cache-provider: "github"
    
        # Determines whether to cache the ~/.cargo/bin directory.
        # default: "true"
        cache-bin: "true"
